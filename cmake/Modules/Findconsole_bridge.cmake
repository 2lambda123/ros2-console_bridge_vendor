# Get package location hint from environment variable (if any)
if(NOT console_bridge_ROOT_DIR AND DEFINED ENV{console_bridge_ROOT_DIR})
    set(console_bridge_ROOT_DIR "$ENV{console_bridge_ROOT_DIR}" CACHE PATH
            "console_bridge base directory location (optional, used for nonstandard installation paths)")
endif()

# Search path for nonstandard package locations
if(console_bridge_ROOT_DIR)
    set(console_bridge_INCLUDE_PATH PATHS "${console_bridge_ROOT_DIR}/include" NO_DEFAULT_PATH)
    set(console_bridge_LIBRARY_PATH PATHS "${console_bridge_ROOT_DIR}/lib"     NO_DEFAULT_PATH)
else()
    set(console_bridge_INCLUDE_PATH "")
    set(console_bridge_LIBRARY_PATH "")
endif()

# Find headers and libraries
find_path(console_bridge_INCLUDE_DIR NAMES console_bridge.h PATH_SUFFIXES "console_bridge" ${console_bridge_INCLUDE_PATH})
find_library(console_bridge_LIBRARY  NAMES console_bridge   PATH_SUFFIXES "console_bridge" ${console_bridge_LIBRARY_PATH})

mark_as_advanced(console_bridge_INCLUDE_DIR console_bridge_LIBRARY)

# Output variables generation
include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(console_bridge DEFAULT_MSG console_bridge_LIBRARY console_bridge_INCLUDE_DIR)

set(console_bridge_FOUND ${CONSOLE_BRIDGE_FOUND}) # Enforce case-correctness: Set appropriately cased variable...
unset(CONSOLE_BRIDGE_FOUND) # ...and unset uppercase variable generated by find_package_handle_standard_args

if(console_bridge_FOUND)
    set(console_bridge_INCLUDE_DIRS ${console_bridge_INCLUDE_DIR})
    set(console_bridge_LIBRARIES ${console_bridge_LIBRARY})

    if(NOT TARGET console_bridge::console_bridge)
        add_library(console_bridge::console_bridge UNKNOWN IMPORTED)
        set_property(TARGET console_bridge::console_bridge PROPERTY IMPORTED_LOCATION ${console_bridge_LIBRARY})
        set_property(TARGET console_bridge::console_bridge PROPERTY INTERFACE_INCLUDE_DIRECTORIES ${console_bridge_INCLUDE_DIR})
    endif()
    list(APPEND console_bridge_TARGETS console_bridge::console_bridge)
elseif(console_bridge_FIND_REQUIRED)
    message(FATAL_ERROR "Unable to find console_bridge")
endif()
